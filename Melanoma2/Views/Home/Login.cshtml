
@{
    ViewBag.Title = "Login";
}


<meta charset="UTF-8">
<title>Sample FirebaseUI App</title>
<script src="https://www.gstatic.com/firebasejs/4.12.0/firebase.js"></script>

<script src="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.js"></script>
<link type="text/css" rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/2.5.1/firebaseui.css" />

<script>
    // Initialize Firebase
    var config = {
        apiKey: "AIzaSyC8KloedMvZLdSqUMk74oE7IM0SF9bJCrw",
        authDomain: "idermatoscope.firebaseapp.com",
        databaseURL: "https://idermatoscope.firebaseio.com",
        projectId: "idermatoscope",
        storageBucket: "idermatoscope.appspot.com",
        messagingSenderId: "960111575797"
    };
    firebase.initializeApp(config);

    //user listener
    firebase.auth().onAuthStateChanged(function (user) {
        if (user) {
            // User is signed in.
            var displayName = user.displayName;
            var email = user.email;
            var emailVerified = user.emailVerified;
            var photoURL = user.photoURL;
            var isAnonymous = user.isAnonymous;
            var uid = user.uid;
            var providerData = user.providerData;
            // ...
        } else {
            // User is signed out.
            // ...
        }
    });

    // Initialize the FirebaseUI Widget using Firebase.
    var ui = new firebaseui.auth.AuthUI(firebase.auth());


    var uiConfig = {
        callbacks: {
            signInSuccessWithAuthResult: function (authResult, redirectUrl) {
                // User successfully signed in.
                // Return type determines whether we continue the redirect automatically
                // or whether we leave that to developer to handle.
                return true;
            },
            uiShown: function () {
                // The widget is rendered.
            }
        },
        signInSuccessUrl: 'Index',
        signInOptions: [
          // Leave the lines as is for the providers you want to offer your users.
          firebase.auth.GoogleAuthProvider.PROVIDER_ID,
        ],
    };

    // The start method will wait until the DOM is loaded.
    //if (ui.isPendingRedirect()) {
    ui.start('#firebaseui-auth-container', uiConfig);
    //}

    firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);

  //  //authentication provider
  //  var provider = new firebase.auth.GoogleAuthProvider();
  //  //redirecting for sign-in
  //  firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)
  //.then(function () {
  //    // Existing and future Auth states are now persisted in the current
  //    // session only. Closing the window would clear any existing state even
  //    // if a user forgets to sign out.
  //    // ...
  //    // New sign-in will be persisted with session persistence.
  //    return firebase.auth().signInWithRedirect(provider);
  //})
  //  //sign-in results
  //  firebase.auth().getRedirectResult().then(function (result) {
  //      if (result.credential) {
  //          // This gives you a Google Access Token. You can use it to access the Google API.
  //          var token = result.credential.accessToken;
  //          // ...
  //      }
  //      // The signed-in user info.
  //      var user = result.user;
  //  }).catch(function (error) {
  //      // Handle Errors here.
  //      var errorCode = error.code;
  //      var errorMessage = error.message;
  //      // The email of the user's account used.
  //      var email = error.email;
  //      // The firebase.auth.AuthCredential type that was used.
  //      var credential = error.credential;
  //      // ...
  //  });





</script>


<!-- The surrounding HTML is left untouched by FirebaseUI.
     Your app may use that space for branding, controls and other customizations.-->
<h1>Welcome to Your Web Portal: Login Below</h1>
<div id="firebaseui-auth-container"></div>
